<h2>Todo Lists</h2>

<div id="lists">

</div>

<h4>Make a New List</h4>

<%= form_for(@todo_list,
	:remote => true,
	:format => :json,
	:html => { :id => "new_list_form" }) do |f| %>
	<%= f.label :title, "List Title" %>
	<%= f.text_field :title %>

	<br />

	<p>Add items</p>
	<div id="add_list_items">
		<input type="text" name="todo_list[items_attributes][0][name]" id="todo_list_item_0">
	</div>
	<a href="#" id="another_item">Add another item to list</a>
	<br />
	<%= f.submit %>
<% end %>


<script type="application/json" id="all_lists">
	<%= @todo_lists.to_json(:include => :items).html_safe %>
</script>

<%= File.read("./app/views/todo_lists/_show.html").html_safe %>
<%= File.read("./app/views/todo_lists/_add_item.html").html_safe %>
<%= File.read("./app/views/todo_lists/_render_list_links.html").html_safe %>

<script type="text/javascript">
	$(function() {
		TASKS = $('#all_lists').html();
		var list_div = $('#lists');
		

		function render(tasks) {
			var tasks = JSON.parse(tasks);
			_.each(tasks, function(list, i) {

				var listTempCode = $("#current_lists").html();
				var listTempFn = _.template(listTempCode);
				var renderedListTemp = listTempFn({
					list: list
				});

				var $p = $('<p></p>');
				$p.attr('id', list.id);
				$p.html(renderedListTemp);
			
				$p.children('a:first-child').attr('id', 'list_' + i);
				list_div.append($p);
		
				var templateCode = $("#list_items").html();
				var templateFunction = _.template(templateCode);
				var renderedTemplate = templateFunction({
					items: list.items
				});
				$p.append(renderedTemplate);
				$p.find('ul').hide();
			});
		}

		render(TASKS);

		list_div.on('click', 'p a:first-child', function () {
			event.preventDefault();
			$(this).parent().find('ul').toggle('slow');
		});

		list_div.on('click', 'a.item_obliterator', function() {
			event.preventDefault();
			var item = $(this).parent();

			ItemObliterator(item);
			item.remove();
		});

		list_div.on('click', 'a.list_obliterator', function() {
			event.preventDefault();
			var list = $(this).parent();
			
			ListObliterator(list);
			list.remove();
		});

		function ItemObliterator(item) {
			var itemId = item.attr('id');
			var url = '/todo_items/' + itemId;

			$.post(url, { "_method": "delete" });
		}

		function ListObliterator(list) {
			var listId = list.attr('id');
			var url = '/todo_lists/' + listId;

			$.post(url, { "_method": "delete" });
		}

		$("#new_list_form").on('ajax:success', function(event, data) {
			var $p = $('<p></p>');
			var list_link = $('<a href="#"></a>');
			list_link.attr('id', 'list_' + (JSON.parse(TASKS).length));
			list_link.text(data.title);
			$p.html(list_link);
			$('#lists').append($p);

			var templateCode = $("#list_items").html();
			var templateFunction = _.template(templateCode);
			var renderedTemplate = templateFunction({
				items: data.items
			});

			$p.append(renderedTemplate);
			$p.find('ul').hide();

			parsed_tasks = JSON.parse(TASKS);
			parsed_tasks.push(data);
			obj_string = JSON.stringify(parsed_tasks);
			TASKS = obj_string;
		});

		$("#another_item").click(function () {
			event.preventDefault();
			var addItemCode = $("#add_item_field").html();
			var addItemFunction = _.template(addItemCode);
			var renderedItem = addItemFunction();
			$("#add_list_items").append(renderedItem);
		});


	});
</script>